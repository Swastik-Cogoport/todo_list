{"ast":null,"code":"var _jsxFileName = \"/Users/swastiksharma/Desktop/projects/cogoport-todolist-react/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; //useeffect for local storage\nimport ReactDOM from 'react-dom';\nimport '../src/index.css'; // linking css file\nimport { v4 as uuid } from 'uuid'; // for making unique ids for todo list items\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [category, setCategory] = useState('default');\n  const [todo, setTodo] = useState('');\n  const [date, setDate] = useState('1950-01-01');\n  const [todos, setTodos] = useState([]);\n  const [showtodos, savetodos] = useState(todos);\n  const [search, setSearch] = useState('');\n  const [filter, setFilter] = useState('');\n\n  // storing data in local storage\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if (items) {\n      setTodos(items);\n    }\n  }, []);\n  useEffect(() => {\n    // normal list\n    localStorage.setItem('items', JSON.stringify(todos));\n    savetodos(todos);\n  }, [todos]);\n  useEffect(() => {\n    // search list\n    savetodos(todos.filter(t => t.text.includes(search)));\n  }, [search]);\n  useEffect(() => {\n    // filter list\n    console.log(filter);\n    console.log(showtodos);\n    savetodos(todos.filter(t => t.filter === filter));\n    if (filter === \"all\") savetodos(todos);\n  }, [filter]);\n\n  // Adding content to the list\n  const addTodo = () => {\n    const id = uuid();\n    setTodos([...todos, {\n      id: id,\n      text: todo,\n      status: false,\n      category: category,\n      date: date,\n      filter: category\n    }]);\n    //setTodo(\"\");\n    localStorage.setItem(\"todos\", JSON.stringify([...todos], {\n      id: id,\n      text: todo,\n      status: false,\n      type: category,\n      time: date\n    }));\n  };\n\n  // For  deleting a particular content\n  const deleteTodo = id => {\n    setTodos(todos.filter(t => t.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos.filter(t => t.id !== id)));\n  };\n\n  // For adding checkbox which will have a strike through effect\n  const markasdone = id => {\n    setTodos(todos.map(t => {\n      if (t.id == id) t.status = !t.status;\n      return t;\n    }));\n  };\n  const getcategory = () => {\n    let temparr = [];\n    {\n      todos.map(todo => temparr.push(todo.type));\n    }\n    setCategory(temparr);\n  };\n  const changestatus = () => {\n    setResult(todos.filter(todo => {\n      let flag = true;\n      if (searchtodo.length > 0) {\n        if (!todo.text.includes(searchtodo)) {\n          flag = false;\n        }\n      }\n      if (searchcat.length > 0) {\n        if (todo.type !== searchcat) {\n          flag = false;\n        }\n      }\n      if (date1.length > 0) {\n        if (new Date(todo.time) < new Date(date1)) {\n          flag = false;\n        }\n      }\n      if (date2.length > 0) {\n        if (new Date(todo.time) < new Date(date2)) {\n          flag = false;\n        }\n      }\n      return flag;\n    }));\n  };\n  return (\n    /*#__PURE__*/\n    // <main>\n    //   <div className='container'>\n    //     <h1>To-Do List</h1>\n    //     <div className=\"search-and-filter\">\n    //       <input\n    //       value={search}\n    //       className='search'\n    //       onChange={(e) => setSearch(e.target.value)}\n    //       placeholder='Search Here'\n    //       type=\"text\" />\n    //       <div className=\"filters\">\n    //         <span>Filter By :-</span>\n    //         <input type=\"date\" />\n    //         <select name=\"category\" id=\"category\" onChange={(e)=>setFilter(e.target.value)}>\n    //         <option value=\"all\">All Category</option>\n    //         <option value=\"default\">Default</option>\n    //         <option value=\"food\">Food</option>\n    //         <option value=\"travel\">Travel</option>\n    //         <option value=\"fitness\">Fitness</option>\n    //       </select>\n    //       </div>\n    //     </div>\n    //     <div className='add-container'>\n    //     <input\n    //     placeholder='Enter To-Do here'\n    //     value = {todo}\n    //     onChange={(e) => setTodo(e.target.value)}\n    //     type=\"text\" />\n    //     <div className='category-container'>\n    //       <input type=\"date\" name=\"\" id=\"\" onChange={(e)=>setDate(e.target.value)}/>\n    //       <select name=\"category\" id=\"category\" onChange={(e)=>setCategory(e.target.value)}>\n    //         <option value=\"default\">Default</option>\n    //         <option value=\"food\">Food</option>\n    //         <option value=\"travel\">Travel</option>\n    //         <option value=\"fitness\">Fitness</option>\n    //       </select>\n    //     </div>\n    //       <button className='add-button' onClick={addTodo}>ADD</button>\n    //     </div>\n    //   <div className='todos-container'>\n    //     {\n    //       showtodos.map((todo) => {\n    //         return <div className='todo-item'>\n    //                  <input className='check' type=\"checkbox\" onChange={() => {markasdone(todo.id)}} />\n    //                  <div className='todo-details'>\n    //                   <span>{todo.status===true?<s>{todo.text}</s>:todo.text}</span>\n    //                   <span className='category'>{todo.status===true?<s>{todo.category}</s>:todo.category}</span>\n    //                   <span className='date'>{todo.status===true?<s>{todo.date}</s>:todo.date}</span>\n    //                  </div>\n    //                  {<button className='delete-button' onClick={() => deleteTodo(todo.id)}>Delete</button>}\n    //                </div>\n    //       })\n    //     }\n    //   </div>\n    //   </div>\n    // </main>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n};\n_s(App, \"KzjPWEbHcuYrc9p8hE+ec1nX5DY=\");\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","v4","uuid","App","category","setCategory","todo","setTodo","date","setDate","todos","setTodos","showtodos","savetodos","search","setSearch","filter","setFilter","items","JSON","parse","localStorage","getItem","setItem","stringify","t","text","includes","console","log","addTodo","id","status","type","time","deleteTodo","markasdone","map","getcategory","temparr","push","changestatus","setResult","flag","searchtodo","length","searchcat","date1","Date","date2","render","document","getElementById"],"sources":["/Users/swastiksharma/Desktop/projects/cogoport-todolist-react/src/index.js"],"sourcesContent":["import React, { useState,useEffect } from 'react'; //useeffect for local storage\nimport ReactDOM from 'react-dom';\nimport '../src/index.css' // linking css file\nimport {v4 as uuid} from 'uuid'; // for making unique ids for todo list items\n\nconst App = () => { \n  const [category,setCategory] = useState('default');\n  const [todo,setTodo] = useState('');\n  const [date,setDate] = useState('1950-01-01');\n  const [todos,setTodos] = useState([]);\n  const [showtodos,savetodos] = useState(todos);\n  const [search,setSearch] = useState('');\n  const [filter,setFilter] = useState('');\n  \n  // storing data in local storage\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('items'));\n    if(items){\n      setTodos(items);\n    }\n  }, []);\n\n  useEffect(() => {                                              // normal list\n    localStorage.setItem('items', JSON.stringify(todos));\n    savetodos(todos);\n  }, [todos]);\n\n  useEffect(() => {                                              // search list\n    savetodos(todos.filter(t => t.text.includes(search)));\n  }, [search]);\n\n  useEffect(() => {                                              // filter list\n    console.log(filter);\n    console.log(showtodos);\n    savetodos(todos.filter(t => t.filter===filter));\n    if(filter===\"all\") savetodos(todos);\n  }, [filter]);\n\n  // Adding content to the list\n  const addTodo = () => {\n    const id = uuid();\n    setTodos([...todos,{id:id,text:todo,status:false,category:category,date:date,filter:category}]);\n  //setTodo(\"\");\n    localStorage.setItem(\"todos\",JSON.stringify([...todos], {id:id,text:todo,status:false,type:category,time:date}))\n  }\n\n  // For  deleting a particular content\n  const deleteTodo = (id) => {\n    setTodos(todos.filter((t) => t.id !== id));\n    localStorage.setItem(\"todos\", JSON.stringify(todos.filter((t) => t.id !== id)))\n  };\n\n  // For adding checkbox which will have a strike through effect\n  const markasdone = (id) => {\n    setTodos(\n      todos.map(t => {\n        if(t.id==id) t.status = !t.status;\n        return t;\n      })\n    )\n  }\n\n  const getcategory = () => {\n    let temparr=[];\n    { todos.map(todo => (\n      temparr.push(todo.type)\n    ))}\n    setCategory(temparr)\n  }\n\n  const changestatus = () => {\n    setResult(todos.filter(todo => {\n      let flag=true;\n      if(searchtodo.length>0) {\n        if(!todo.text.includes(searchtodo)) {\n          flag=false;\n        }\n      }\n\n      if(searchcat.length>0) {\n        if(todo.type!==searchcat){\n          flag=false;\n        }\n      }\n\n      if(date1.length>0){\n        if(((new Date(todo.time)) < (new Date(date1)))){\n          flag=false;\n        }\n      }\n\n      if(date2.length>0){\n        if(((new Date(todo.time)) < (new Date(date2)))){\n          flag=false;\n        }\n      }\n      return flag;\n    }))\n  }\n\n  return(\n    // <main>\n    //   <div className='container'>\n    //     <h1>To-Do List</h1>\n    //     <div className=\"search-and-filter\">\n          \n    //       <input\n    //       value={search}\n    //       className='search'\n    //       onChange={(e) => setSearch(e.target.value)}\n    //       placeholder='Search Here'\n    //       type=\"text\" />\n    //       <div className=\"filters\">\n    //         <span>Filter By :-</span>\n    //         <input type=\"date\" />\n    //         <select name=\"category\" id=\"category\" onChange={(e)=>setFilter(e.target.value)}>\n    //         <option value=\"all\">All Category</option>\n    //         <option value=\"default\">Default</option>\n    //         <option value=\"food\">Food</option>\n    //         <option value=\"travel\">Travel</option>\n    //         <option value=\"fitness\">Fitness</option>\n    //       </select>\n\n    //       </div>\n    //     </div>\n    //     <div className='add-container'>\n    //     <input\n    //     placeholder='Enter To-Do here'\n    //     value = {todo}\n    //     onChange={(e) => setTodo(e.target.value)}\n    //     type=\"text\" />\n    //     <div className='category-container'>\n    //       <input type=\"date\" name=\"\" id=\"\" onChange={(e)=>setDate(e.target.value)}/>\n    //       <select name=\"category\" id=\"category\" onChange={(e)=>setCategory(e.target.value)}>\n    //         <option value=\"default\">Default</option>\n    //         <option value=\"food\">Food</option>\n    //         <option value=\"travel\">Travel</option>\n    //         <option value=\"fitness\">Fitness</option>\n    //       </select>\n    //     </div>\n\n    //       <button className='add-button' onClick={addTodo}>ADD</button>\n    //     </div>\n    //   <div className='todos-container'>\n    //     {\n    //       showtodos.map((todo) => {\n    //         return <div className='todo-item'>\n    //                  <input className='check' type=\"checkbox\" onChange={() => {markasdone(todo.id)}} />\n    //                  <div className='todo-details'>\n    //                   <span>{todo.status===true?<s>{todo.text}</s>:todo.text}</span>\n    //                   <span className='category'>{todo.status===true?<s>{todo.category}</s>:todo.category}</span>\n    //                   <span className='date'>{todo.status===true?<s>{todo.date}</s>:todo.date}</span>\n    //                  </div>\n    //                  {<button className='delete-button' onClick={() => deleteTodo(todo.id)}>Delete</button>}\n    //                </div>\n    //       })\n    //     }\n    //   </div>\n    //   </div>\n    // </main>\n\n    <>\n    <div>\n      <h1> </h1>\n    </div>\n    </>\n  )\n}\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}